apiVersion: apps/v1
kind: Deployment
metadata:
  name: signup-deployment
  labels:
    app: shoppingapp
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: shoppingapp
      microservice: signup
  template:
    metadata:
      name: signup-pod
      labels:
        app: shoppingapp
        microservice: signup
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      containers:
        - name: signup-container
          image: aakashbodade/signup:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_PASSWORD
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: signup-svc
  labels:
    app: shoppingapp
    microservice: signup
spec:
  type: ClusterIP
  selector:
    app: shoppingapp
    microservice: signup
  ports:
    - port: 80
      targetPort: 8001
